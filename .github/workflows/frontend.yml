name: Frontend CI/CD (React + Vite + Nginx)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: frontend-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test:
    name: CI (lint & build)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      FRONTEND_DIR: "frontend"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
          cache-dependency-path: ${{ env.FRONTEND_DIR }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm ci

      - name: Run linter
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm run lint

      - name: Build application
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: ${{ env.FRONTEND_DIR }}/dist
          retention-days: 7

  build_push:
    name: Build & Push Docker Image
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ghcr.io/dharmveer18/inventorymanagement-frontend
      CONTEXT: "frontend"
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.CONTEXT }}/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Production
    needs: build_push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: production
    steps:
      - name: Deploy via SSH (docker compose)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST_PRODUCTION }}
          username: ${{ secrets.SSH_USER_PRODUCTION }}
          key: ${{ secrets.SSH_KEY_PRODUCTION }}
          script: |
            set -euxo pipefail
            IMAGE="ghcr.io/dharmveer18/inventorymanagement-frontend:sha-$GITHUB_SHA"
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            docker pull "$IMAGE"
            docker pull ghcr.io/dharmveer18/inventorymanagement-frontend:latest || true

            docker compose -f /opt/stack/production/docker-compose.yml up -d frontend

            docker image prune -f
